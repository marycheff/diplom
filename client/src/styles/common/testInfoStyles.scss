@use "@styles/variables" as *;

@mixin container {
	max-width: 1200px;
	margin: 0 auto;
	padding: 20px;
}

@mixin infoBlock {
	background-color: $background-100;
	border-radius: 16px;
	box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
	overflow: hidden;
	transition: transform 0.2s ease-in-out;

	&:not(.topGrid > *) {
		margin-bottom: 24px;
	}
}

@mixin blockTitle {
	background-color: $primary-400;
	color: $background-100;
	padding: 15px 20px;
	margin: 0;
	font-size: 18px;
	font-weight: bold;
}

@mixin blockContent {
	padding: 20px;
	display: flex;
	flex-direction: column;
}

@mixin infoRow {
	display: flex;
	margin-bottom: 10px;
	padding: 8px 0;
	border-bottom: 1px solid $background-600;

	&:last-child {
		border-bottom: none;
	}

	@media screen and (max-width: 480px) {
		flex-direction: column;
		.label {
			width: 100%;
			margin-bottom: 4px;
		}
	}
}

@mixin label {
	font-weight: bold;
	color: $secondary-600;
	width: 60%;
	min-width: 120px;

	@media screen and (max-width: 768px) {
		min-width: 100px;
	}
}

@mixin value {
	color: $primary-600;
	flex: 1;
	width: 40%;
	word-break: break-word;

	@media screen and (max-width: 768px) {
		text-align: right;
	}
}

@mixin emptyField {
	color: $secondary-400;
	font-style: italic;
}

@mixin emptyBlock {
	text-align: center;
	color: $secondary-400;
	font-style: italic;
	padding: 20px 0;
	flex-grow: 1;
	display: flex;
	align-items: center;
	justify-content: center;
}

@mixin questionsList {
	display: flex;
	flex-direction: column;
	gap: 20px;
}

@mixin questionBlock {
	background-color: $background-400;
	border-radius: 12px;
	padding: 15px;
	border-left: 4px solid $primary-400;
}

@mixin questionHeader {
	display: flex;
	align-items: center;
	margin-bottom: 15px;
	gap: 10px;

	@media screen and (max-width: 576px) {
		flex-wrap: wrap;

		.questionType {
			margin-top: 5px;
		}
	}
}

@mixin questionNumber {
	background-color: $primary-400;
	color: $background-100;
	width: 30px;
	height: 30px;
	border-radius: 50%;
	display: flex;
	align-items: center;
	justify-content: center;
	font-weight: bold;
	flex-shrink: 0;
}

@mixin questionText {
	font-weight: bold;
	font-size: 16px;
	flex: 1;
	color: $primary-600;
}

@mixin questionType {
	background-color: $background-600;
	color: $secondary-800;
	padding: 4px 8px;
	border-radius: 4px;
	font-size: 12px;
	white-space: nowrap;
}

@mixin answerItem {
	background-color: $background-200;
	border-radius: 8px;
	padding: 10px 15px;
	display: flex;
	align-items: center;
	justify-content: space-between;
	border: 1px solid $background-600;

	&:hover {
		background-color: $background-400;
	}

	@media screen and (max-width: 480px) {
		flex-direction: column;
		align-items: flex-start;

		.correctBadge,
		.answerStatus {
			margin-top: 5px;
			align-self: flex-end;
		}
	}
}

@mixin correctAnswer {
	border-left: 4px solid $primary-400;
}

@mixin answerText {
	flex: 1;
	color: $primary-600;
}

@mixin correctBadge {
	background-color: $primary-400;
	color: $background-100;
	padding: 3px 8px;
	border-radius: 4px;
	font-size: 12px;
	font-weight: bold;
}

// Специфичные миксины для разных типов сеток
@mixin testInfoTopGrid {
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: 20px;
	margin-bottom: 24px;

	& > .infoBlock {
		min-height: 200px;
		display: flex;
		flex-direction: column;

		&:nth-child(1) {
			grid-column: 1 / 2;
			grid-row: 1;
		}

		&:nth-child(2) {
			grid-column: 1 / 3;
			grid-row: 2;
		}

		&:nth-child(3) {
			grid-column: 2 / 3;
			grid-row: 1;
		}
	}

	&:has(> .infoBlock:nth-child(2)):not(:has(> .infoBlock:nth-child(3))) {
		& > .infoBlock {
			&:nth-child(1) {
				grid-column: 1 / 2;
				grid-row: 1;
			}
			&:nth-child(2) {
				grid-column: 2 / 3;
				grid-row: 1;
			}
		}
	}

	@media screen and (max-width: 1024px) {
		grid-template-columns: 1fr;

		& > .infoBlock {
			min-height: auto;

			&:nth-child(1),
			&:nth-child(2),
			&:nth-child(3) {
				grid-column: 1 !important;
				grid-row: auto !important;
			}
		}

		&:has(> .infoBlock:nth-child(2)):not(:has(> .infoBlock:nth-child(3))) {
			& > .infoBlock {
				&:nth-child(1),
				&:nth-child(2) {
					grid-column: 1 !important;
					grid-row: auto !important;
				}
			}
		}
	}
}

@mixin attemptInfoTopGrid {
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: 20px;
	margin-bottom: 24px;
	align-items: stretch;

	> .infoBlock {
		&:first-child {
			grid-row: span 2;
			display: flex;
			flex-direction: column;
			height: 100%;
		}

		&:nth-child(2) {
			grid-column: 2;
			grid-row: 1;
		}

		&:nth-child(3) {
			grid-column: 2;
			grid-row: 2;
		}
	}

	@media screen and (max-width: 1024px) {
		grid-template-columns: 1fr;
		grid-template-rows: auto;
		gap: 16px;

		> .infoBlock {
			&:first-child,
			&:nth-child(2),
			&:nth-child(3) {
				grid-column: auto;
				grid-row: auto;
				height: auto;
			}
		}
	}
}
